<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Raghu Udiyar</title>
 <link href="http://raghusiddarth.com/atom.xml" rel="self"/>
 <link href="http://raghusiddarth.com/"/>
 <updated>2015-03-25T10:20:29+05:30</updated>
 <id>http://raghusiddarth.com</id>
 <author>
   <name>Raghu Udiyar</name>
   <email>raghusiddarth@gmail.com</email>
 </author>

 
 <entry>
   <title>Using nfsroot to boot diskless clients on RHEL</title>
   <link href="http://raghusiddarth.com/using-nfsroot-to-boot-diskless-clients-on-rhel"/>
   <updated>2012-03-20T16:22:09+05:30</updated>
   <id>http://raghusiddarth.com/using-nfsroot-to-boot-diskless-clients-on-rhel</id>
   <content type="html">&lt;p&gt;Here is a brief outline on the steps needed to set up a Red Hat Enterprise Linux 6 server to boot diskless clients using nfs.&lt;/p&gt;
&lt;p&gt;To do this, you need to set up &lt;strong&gt;dhcp&lt;/strong&gt;, &lt;strong&gt;tftp&lt;/strong&gt; (to pxe boot) and a &lt;strong&gt;nfs&lt;/strong&gt; server to serve the rootfs.&lt;/p&gt;
&lt;p&gt;To keep it simple, I did everything on the same server, but you can easily have multiple servers for each service. The same steps should also work on Fedora (14+) with minor changes.&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2&gt;&lt;strong&gt;Requirements&lt;/strong&gt; :&lt;strong&gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Server&lt;/strong&gt; : Fresh RHEL 6 installation (registered to RHN)&lt;/p&gt;
&lt;pre&gt;IP = 192.168.50.254/24 (static) on eth0

# vi /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=eth0
HWADDR=52:54:00:73:1C:CB
ONBOOT=yes
BOOTPROTO=static
IPADDR=192.168.50.254
NETMASK=255.255.255.0&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Client&lt;/strong&gt; : A box on the same network (with support for PXE)&lt;/p&gt;
&lt;pre&gt;MAC = 52:54:00:ca:c6:71&lt;/pre&gt;
&lt;h2&gt;&lt;strong&gt;On the Server&lt;/strong&gt; :&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt; - Create the nfs rootfs first :&lt;/p&gt;
&lt;pre&gt;# mkdir /netboot/
# rsync -av --progress --exclude=/proc --exclude=/sys --exclude=/netboot / /netboot/&lt;/pre&gt;
&lt;p&gt;(i.e. copy everything from root to the /netboot folder)&lt;/p&gt;
&lt;pre&gt;# mkdir /netboot/{proc,sys}
# vi /netboot/etc/fstab

192.168.50.254:/netboot/  /                      nfs     defaults       1 1
tmpfs                   /dev/shm                tmpfs   defaults        0 0
devpts                  /dev/pts                devpts  gid=5,mode=620  0 0
sysfs                   /sys                    sysfs   defaults        0 0
proc                    /proc                   proc    defaults        0 0

# vi /netboot/etc/sysconfig/network-scripts/ifcfg-eth0

DEVICE=&quot;eth0&quot;
HWADDR=&quot;52:54:00:ca:c6:71&quot;
ONBOOT=&quot;no&quot;
BOOTPROTO=&quot;dhcp&quot;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt; - Install and enable services :&lt;/p&gt;
&lt;pre&gt;# yum install dhcp syslinux tftp-server -y
# yum groupinstall &quot;NFS file server&quot; -y

# chkconfig dhcpd on
# chkconfig tftp on
# chkconfig nfs on
# service xinetd start&lt;/pre&gt;
&lt;p&gt;For simplicity, disable the firewall :&lt;/p&gt;
&lt;pre&gt;# iptables -F
# service iptables save&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt; - configure dhcp server :&lt;/p&gt;
&lt;pre&gt;# vi /etc/dhcp/dhcpd.conf

# DHCP Server Configuration file.
#   see /usr/share/doc/dhcp*/dhcpd.conf.sample
#   see &#39;man 5 dhcpd.conf&#39;
#
ddns-update-style interim;
ignore client-updates;
allow booting;
allow bootp;
subnet 192.168.50.0 netmask 255.255.255.0 {
option routers      192.168.50.254;
option subnet-mask   255.255.255.0;
option nis-domain   &quot;domain.org&quot;;
option domain-name  &quot;domain.org&quot;;
option domain-name-servers  192.168.50.254;
option time-offset    -18000; # Eastern Standard Time
default-lease-time 21600;
max-lease-time 43200;

host netboot6 {
next-server 192.168.50.254;
hardware ethernet 52:54:00:ca:c6:71;
fixed-address 192.168.50.100;
filename &quot;pxelinux.0&quot;;
}
}

# service dhcpd start&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt; : To restrict dhcpd to a particular interface edit the following file :&lt;/p&gt;
&lt;pre&gt;# cat /etc/sysconfig/dhcpd
# Command line options here
DHCPDARGS=&quot;eth1&quot;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Step 4&lt;/strong&gt; - enable nfs and export the rootfs :&lt;/p&gt;
&lt;pre&gt;# vi /etc/exports
 /netboot/            *(rw,async,no_root_squash)

# service rpcbind start
# service nfs start&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Step 5&lt;/strong&gt; - generate the initramfs file (here is where the magic happens):&lt;/p&gt;
&lt;pre&gt;# yum install dracut-network -y
# dracut -f /boot/netboot6.img `uname -r` root=dhcp root-path=nfs:192.168.50.254:/netboot/&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Step 6&lt;/strong&gt; - configure pxe :&lt;/p&gt;
&lt;pre&gt;# mkdir /var/lib/tftpboot/pxelinux.cfg/
# cp /usr/share/syslinux/pxelinux.0 /var/lib/tftpboot/
# cp /boot/netboot6.img /var/lib/tftpboot/
# cp /boot/vmlinuz-2.6.32-71.el6.x86_64 /var/lib/tftpboot

# vi /var/lib/tftpboot/pxelinux.cfg/default

 default netboot6
 timeout 30
 prompt 1

 label netboot6
 kernel /vmlinuz-2.6.32-71.el6.x86_64
 append initrd=/netboot6.img rw root=nfs:192.168.50.254:/netboot/ selinux=0 enforcing=0&lt;/pre&gt;
&lt;h2&gt;&lt;strong&gt;On the Client&lt;/strong&gt; :&lt;/h2&gt;
&lt;p&gt;Configure the client to boot over the network (i.e. enable pxe boot) and start the system.&lt;/p&gt;
&lt;p&gt;The following screen shots show a successful boot :&lt;/p&gt;
&lt;p&gt;
&lt;a href=&quot;http://rags.files.wordpress.com/2012/03/1-pxe-boot-start.png&quot;&gt;
  &lt;img class=&quot;alignleft size-thumbnail wp-image-99&quot; title=&quot;1-pxe-boot-start&quot; src=&quot;/assets/1-pxe-boot-start.png?w=150&quot; alt=&quot;&quot; width=&quot;150&quot; height=&quot;125&quot; /&gt;
&lt;/a&gt;
&lt;a href=&quot;http://rags.files.wordpress.com/2012/03/2-load-kernel-initramfs.png&quot;&gt;&lt;img class=&quot;alignleft size-thumbnail wp-image-100&quot; title=&quot;2-load-kernel-initramfs&quot; src=&quot;/assets/2-load-kernel-initramfs.png?w=150&quot; alt=&quot;&quot; width=&quot;150&quot; height=&quot;125&quot; /&gt;&lt;/a&gt;

&lt;a href=&quot;http://rags.files.wordpress.com/2012/03/3-start-init1.png&quot;&gt;&lt;img class=&quot;alignleft size-thumbnail wp-image-102&quot; title=&quot;3-start-init&quot; src=&quot;/assets/3-start-init1.png?w=150&quot; alt=&quot;&quot; width=&quot;150&quot; height=&quot;125&quot; /&gt;&lt;/a&gt;

&lt;a href=&quot;http://rags.files.wordpress.com/2012/03/4-start-services.png&quot;&gt;&lt;img class=&quot;alignleft size-thumbnail wp-image-103&quot; title=&quot;4-start-services&quot; src=&quot;/assets/4-start-services.png?w=150&quot; alt=&quot;&quot; width=&quot;150&quot; height=&quot;125&quot; /&gt;&lt;/a&gt;

&lt;a href=&quot;http://rags.files.wordpress.com/2012/03/5-login.png&quot;&gt;&lt;img class=&quot;alignleft size-thumbnail wp-image-104&quot; title=&quot;5-login&quot; src=&quot;/assets/5-login.png?w=150&quot; alt=&quot;&quot; width=&quot;150&quot; height=&quot;125&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br/&gt;
</content>
 </entry>
 
 <entry>
   <title>List information about block devices using lsblk</title>
   <link href="http://raghusiddarth.com/list-information-about-block-devices-using-lsblk"/>
   <updated>2011-11-02T23:46:58+05:30</updated>
   <id>http://raghusiddarth.com/list-information-about-block-devices-using-lsblk</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;lsblk&lt;/strong&gt; let&#39;s you view information about block devices on a GNU/Linux system.&lt;/p&gt;
&lt;p&gt;The output is tree-like and very elegant, with information that would generally require running 3-4 commands. It combines data from mount, df , dmsetup, lvm and raid commands.&lt;/p&gt;
&lt;p&gt;lsblk get it&#39;s data from the /sys filesystem.&lt;/p&gt;
&lt;p&gt;Here is lsblk output on my system :&lt;/p&gt;
&lt;pre&gt;$ lsblk
NAME                       MAJ:MIN RM   SIZE RO MOUNTPOINT
sda                          8:0    0 298.1G  0
├─sda1                       8:1    0   500M  0 /boot
└─sda2                       8:2    0 297.6G  0
  ├─vg_rags-lv_swap (dm-0) 253:0    0   5.8G  0 [SWAP]
  ├─vg_rags-lv_root (dm-1) 253:1    0    50G  0 /
  └─vg_rags-lv_home (dm-2) 253:2    0 241.8G  0
    └─home (dm-3)          253:3    0 241.8G  0 /home
sr0                         11:0    1  1024M  0&lt;/pre&gt;
&lt;p&gt;lsblk is part of the util-liunx package :&lt;/p&gt;
&lt;pre&gt;$ rpm -qf `which lsblk`
util-linux-2.19.1-1.4.fc15.x86_64&lt;/pre&gt;
&lt;p&gt;Running &lt;strong&gt;fdisk -l&lt;/strong&gt; gives similar data. But, fdisk requires root privileges, and It does not understand dm or lvm partitions.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using WebDAV to access Box.net files on a Fedora system</title>
   <link href="http://raghusiddarth.com/using-webdav-to-access-box-net-files-on-a-fedora-system"/>
   <updated>2011-10-24T23:46:46+05:30</updated>
   <id>http://raghusiddarth.com/using-webdav-to-access-box-net-files-on-a-fedora-system</id>
   <content type="html">&lt;p&gt;&lt;a title=&quot;Dropbox&quot; href=&quot;http://www.dropbox.com&quot; target=&quot;_blank&quot;&gt;Dropbox&lt;/a&gt; is by far the leader in the consumer &quot;cloud storage&quot; space; It is simple to use, feature rich and just works! But, there is only so much you can do with the provided 2 Gb free storage.&lt;/p&gt;
&lt;p&gt;Enter: &lt;a title=&quot;Box.net&quot; href=&quot;http://www.box.net&quot; target=&quot;_blank&quot;&gt;Box.net&lt;/a&gt;  -- which has offered (for a limited period) 50 Gb free, lifetime storage, for all Ipone and Ipad users. Check &lt;a title=&quot;box.net free 50G storage&quot; href=&quot;http://blog.box.net/2011/10/12/were-giving-ios-users-insane-amounts-of-free-storage-box50gb/&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; for the details.&lt;/p&gt;
&lt;p&gt;However, I soon found out that Box.net does not provide syncing features that Dropbox is so good at, and there are no clients for Linux.&lt;/p&gt;
&lt;p&gt;Lucky, for Linux users, a &lt;a title=&quot;WebDAV&quot; href=&quot;http://en.wikipedia.org/wiki/WebDAV&quot; target=&quot;_blank&quot;&gt;WebDAV&lt;/a&gt; interface exists.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;I used fedora 15, but the instructions are generic enough that they should work on any release or any Linux distribution for that matter.&lt;/p&gt;
&lt;p&gt;1. Create a folder to mount the box.net share :&lt;/p&gt;
&lt;pre&gt;$ mkdir ~/box&lt;/pre&gt;
&lt;p&gt;2. Install davfs2 :&lt;/p&gt;
&lt;pre&gt;$ sudo yum install davfs2&lt;/pre&gt;
&lt;h6&gt;Note : Nautilus does support webdav, but I&#39;ve found it to be buggy.&lt;/h6&gt;
&lt;p&gt;3. Run the following to add your user to the davfs2 group :&lt;/p&gt;
&lt;pre&gt;$ sudo /sbin/usermod -a -G davfs2 &quot;username&quot;&lt;/pre&gt;
&lt;p&gt;4. Disable locking, as this causes problems with box.net :&lt;/p&gt;
&lt;pre&gt;$ mkdir ~/.davfs2
$ vi ~/.davfs2/davfs2.conf&lt;/pre&gt;
&lt;p&gt;and add the following :&lt;/p&gt;
&lt;pre&gt;use_locks 0&lt;/pre&gt;
&lt;p&gt;5. (Optional) If you do not want to be prompted for the box.net username/password :&lt;/p&gt;
&lt;pre&gt;$ vi ~/.davfs2/secrets&lt;/pre&gt;
&lt;p&gt;and add the following :&lt;/p&gt;
&lt;pre&gt;http://www.box.net/dav  user@email.com   password&lt;/pre&gt;
&lt;p&gt;6. Add the following entry to /etc/fstab :&lt;/p&gt;
&lt;pre&gt;$ sudo vi /etc/fstab

http://www.box.net/dav /home/&quot;username&quot;/box  davfs rw,user,noauto 0 0&lt;/pre&gt;
&lt;h6&gt;Note: Don&#39;t forget to replace &quot;username&quot; with your actual username.&lt;/h6&gt;
&lt;p&gt;7. Finally, to mount the folder run :&lt;/p&gt;
&lt;pre&gt;$ mount  ~/box&lt;/pre&gt;
&lt;p&gt;and the files from your box.net account should be visible.&lt;/p&gt;
&lt;p&gt;Use &quot;rsync&quot;, &quot;unison&quot;, or just plain &quot;cp&quot; to sync files directly to box.net. I find this very convenient for backups and file sharing.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to debug ntp issues?</title>
   <link href="http://raghusiddarth.com/how-to-debug-ntp-issues"/>
   <updated>2011-10-17T02:06:05+05:30</updated>
   <id>http://raghusiddarth.com/how-to-debug-ntp-issues</id>
   <content type="html">&lt;p&gt;&lt;a title=&quot;NTP&quot; href=&quot;http://en.wikipedia.org/wiki/Network_Time_Protocol&quot; target=&quot;_blank&quot;&gt;Ntp&lt;/a&gt; has been the de-facto protocol used by computers to synchronize their clocks over a network, and maintain very accurate time, with as much as 10 millisecond precision. The ntp daemon or &lt;a title=&quot;ntpd&quot; href=&quot;http://en.wikipedia.org/wiki/Ntpd&quot;&gt;ntpd&lt;/a&gt; is the reference implementation, that can be found running on almost all Linux (and Unix) systems. This may change in the future though, as &lt;a href=&quot;http://fedoraproject.org/wiki/Features/ChronyDefaultNTP&quot; target=&quot;_blank&quot;&gt;Chrony&lt;/a&gt; is going to replace ntpd, and will be the default ntp client in Fedora 16. Nevertheless, many systems use ntpd, and I don&#39;t see it going away any time soon.&lt;/p&gt;
&lt;p&gt;In this post, we will take a brief look at how the ntp daemon works and look at ways to debug some common issues.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;When the ntp service first starts, a clock selection process begins, with the daemon polling the servers configured in ntp.conf, at 64 second intervals. Depending on the configuration, this process can take 5 to 10 minutes. To check the status, run the following :&lt;/p&gt;
&lt;pre&gt;# ntpq
ntpq&amp;gt; peers
     remote           refid           st t when poll reach   delay   offset  jitter
=======================================================================================
*time.ferea.org       8.16.24.15       2 u  972 1024  377   28.066   -0.181   4.126
+dg1.rieta.net        15.15.26.3       3 u  467 1024  377  141.664  -23.531   0.140
 mighty.poclabs.      .STEP.          16 u    - 1024    0    0.000    0.000   0.000
 LOCAL(0)             .LOCL.          10 l   32   64  377    0.000    0.000   0.001&lt;/pre&gt;
&lt;p&gt;During the clock selection process the refid column should read &lt;strong&gt;.INIT.&lt;/strong&gt;  and the st (stratum) set to 16.&lt;/p&gt;
&lt;p&gt;The * indicates that this particular association is the chosen ntp source.&lt;br /&gt;
The  + indicates that this ntp &lt;strong&gt;peer&lt;/strong&gt; is a candidate (a peer is a ntp server on the same stratum).&lt;br /&gt;
An empty space indicates that the server is unreachable and therefore rejected (stratum 16).&lt;/p&gt;
&lt;p&gt;If the current local time is greater than 1000 seconds, ntpd will not set the clock. The time can then be manually set using the &quot;date&quot; command or using &quot;ntpdate&quot; :&lt;/p&gt;
&lt;pre&gt;# ntpdate time.ferea.org&lt;/pre&gt;
&lt;p&gt;If no ntp servers get selected, run the following :&lt;/p&gt;
&lt;pre&gt;ntpq&amp;gt; as

ind assID status  conf reach auth condition  last_event cnt
===========================================================
  1 29581  9624   yes   yes  none  sys.peer   reachable  1
  2 29582  9014   yes   yes  none  candidat   reachable  1
  4 29583  8000   yes   yes  none    reject
  5 29584  9024   yes   yes  none    reject   reachable  2&lt;/pre&gt;
&lt;p&gt;The associations shown above correspond to the entries shown in the peer command. Most of the fields are self-explanatory,  except the status column. Use the table &lt;a href=&quot;http://www.eecis.udel.edu/~mills/ntp/html/decode.html#peer&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; to decipher the status codes.&lt;/p&gt;
&lt;p&gt;Use the &quot;assID&quot; for the following command  :&lt;/p&gt;
&lt;pre&gt;ntpq&amp;gt; rv 29583

assID=62236 status=9014 reach, conf, 1 event, event_reach,
srcadr=192.168.23.1, srcport=123, dstadr=192.168.247.11, dstport=123,
leap=00, stratum=3, precision=-6, rootdelay=218.750,
rootdispersion=1381.516, refid=24.1.4.14, reach=377, unreach=0,
hmode=3, pmode=4, hpoll=10, ppoll=10, flash=400 peer_dist, keyid=0,
ttl=0, offset=-29.750, delay=0.316, dispersion=30.400, jitter=1.136,
reftime=d1e4505b.d456f5b0  Thu, Aug  4 2011  0:55:23.829,
org=d1e4c793.e477ba4b  Thu, Aug  4 2011  9:24:03.892,
rec=d1e4c793.ec1fc3ac  Thu, Aug  4 2011  9:24:03.922,
xmt=d1e4c793.ec0b133c  Thu, Aug  4 2011  9:24:03.922,
filtdelay=     0.32    0.40    0.33    0.45    0.42    0.42    0.33    0.38,
filtoffset=  -29.75  -30.89  -29.97  -30.11  -30.15  -29.20  -30.25  -30.36,
filtdisp=     15.63   31.00   46.38   61.75   77.14   92.52  107.91  123.28&lt;/pre&gt;
&lt;p&gt;The flash codes in the rv command output give the reason for the ntp source to get rejected :&lt;/p&gt;
&lt;pre&gt;flash=400 peer_dist&lt;/pre&gt;
&lt;p&gt;This flash code corresponds to &quot;distance threshold exceeded&quot;. Check all the flash codes &lt;a href=&quot;http://www.eecis.udel.edu/~mills/ntp/html/decode.html#flash&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, check the following variables :&lt;/p&gt;
&lt;pre&gt;rootdispersion=1381.516
dispersion=30.400
jitter=1.136&lt;/pre&gt;
&lt;p&gt;Dispersion is an estimate of error, and a large value indicates that the ntp server is not a reliable source, and can indicate conditions such as severe packet loss and network congestion.&lt;/p&gt;
&lt;p&gt;Another useful aid is to run ntpdate with the -d switch :&lt;/p&gt;
&lt;pre&gt;# ntpdate -d time.rhl.com

17 Oct 00:20:51 ntpdate[26388]: ntpdate 4.2.2p1@1.1570-o Thu Nov 26 11:34:35 UTC 2009 (1)
Looking for host time.rhl.com and service ntp
host found : time.rhl.com
transmit(66.125.13.54)
receive(66.125.13.54)
transmit(66.125.13.54)
receive(66.125.13.54)
transmit(66.125.13.54)
receive(66.125.13.54)
transmit(66.125.13.54)
receive(66.125.13.54)
transmit(66.125.13.54)
server 66.125.13.54, port 123
stratum 1, precision -16, leap 00, trust 000
refid [CDMA], delay 0.32297, dispersion 0.00040
transmitted 4, in filter 4
reference time:    d245a5fe.2fdfe09b  Mon, Oct 17 2011  0:20:38.187
originate timestamp: d245a60c.e2117d1e  Mon, Oct 17 2011  0:20:52.883
transmit timestamp:  d245a60c.b9c9b413  Mon, Oct 17 2011  0:20:52.725
filter delay:  0.32361  0.32382  0.32297  0.32619
         0.00000  0.00000  0.00000  0.00000
filter offset: 0.003892 0.004005 0.003607 0.004972
         0.000000 0.000000 0.000000 0.000000
delay 0.32297, dispersion 0.00040
offset 0.003607
17 Oct 00:20:53 ntpdate[26388]: adjust time server 66.187.233.4 offset 0.003607 sec&lt;/pre&gt;
&lt;p&gt;Most, if not all ntp issues can be resolved with the information gathered from the above commands.&lt;/p&gt;
&lt;p&gt;Do you have any tips on debugging ntp problems?&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>An Introduction to Shorewall Firewall</title>
   <link href="http://raghusiddarth.com/an-introduction-to-shorewall-firewall"/>
   <updated>2010-10-25T16:41:13+05:30</updated>
   <id>http://raghusiddarth.com/an-introduction-to-shorewall-firewall</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://rags.files.wordpress.com/2010/10/gareth-davies-logo3.png&quot;&gt;&lt;img class=&quot;size-medium wp-image-26 alignnone&quot; title=&quot;Shorewall-logo&quot; src=&quot;/assets/gareth-davies-logo3.png?w=300&quot; alt=&quot;Shorewall-logo&quot; width=&quot;300&quot; height=&quot;62&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Shorewall is a very powerful, high level configuration tool for the Linux firewall subsystem. The Linux kernel has an inbuilt framework to manipulate network packets called Netfilter. A front end tool &quot;Iptables&quot; is used to configure this netfilter subsystem. Iptables is sufficient for simple configurations and personal firewalls. However, for complex configuration scenarios you can easily get lost and bogged down with its syntax and myriad options.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;Shorewall provides a high level abstraction and keeps the underlying complexity hidden. This makes firewall configurations easier to design and manage. Think of it as, Shorewall is to Iptables, what C is to assembly language. Also, keep in mind that Shorewall is not a daemon that runs in the background. It simply generates the rules, applies them and gets out-of-the-way.&lt;/p&gt;
&lt;p&gt;To start with, I will cover a simple two interface firewall example configuration using Shorewall. We can move to more complex configurations in future posts.&lt;/p&gt;
&lt;p&gt;In this scenario we have a server with one ADSL PPPOE connection - ppp0 and a local network on eth0. I have chosen this setup to hopefully explain the core concepts behind shorewall and set a stage for later enhancements.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; First, install shorewall&lt;/p&gt;
&lt;pre&gt;
# apt-get install shorewall
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;2. &lt;/strong&gt;Shorewall configuration lives in &lt;em&gt;/etc/shorewall&lt;/em&gt; folder which only has two files by default :&lt;/p&gt;
&lt;pre&gt;
root@cronos:etc/shorewall# ls
Makefile shorewall.conf
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;3&lt;/strong&gt;. In order to configure a simple firewall we should, at least, set up the following files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/etc/shorewall/zones&lt;/li&gt;
&lt;li&gt;/etc/shorewall/interfaces&lt;/li&gt;
&lt;li&gt;/etc/shorewall/policy&lt;/li&gt;
&lt;li&gt;/etc/shorewall/rules&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4. &lt;/strong&gt; Configuration file skeletons are stored in &lt;em&gt;/usr/share/doc/shorewall-common/default-config&lt;/em&gt;, however we will be using the files form the two-interfaces example.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. &lt;/strong&gt;Except for &quot;shorewall.conf&quot; copy all files from&lt;em&gt; /usr/share/doc/shorewall-common/examples/two-interfaces&lt;/em&gt; to&lt;em&gt; /etc/shorewall&lt;/em&gt; directory :&lt;/p&gt;
&lt;pre&gt;
root@cronos:/usr/share/doc/shorewall-common/examples/two-interfaces# ls
interfaces  masq  policy  README.txt  routestopped  rules  shorewall.conf  zones
root@cronos:/etc/shorewall# sudo cp /usr/share/doc/shorewall-common/default-config/zones zones
root@cronos:/etc/shorewall# ls
interfaces      Makefile      masq      policy    routestopped     rules    shorewall.conf     zones
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; Shorewall.conf&lt;/p&gt;
&lt;p&gt;This is the main Shorewall configuration file. Most of the defaults should be fine, expect :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To enable IP forwarding you have to set the IP_FORWARDING variable &quot;on&quot;&lt;/li&gt;
&lt;li&gt;To disable IPv6 set DISABLE_IPV6 to &quot;yes&quot;&lt;/li&gt;
&lt;li&gt;Since our external interface is ppp0 we will want to set CLAMPMSS=yes. This sets the MSS to 1452 which is recommended on pppoe connections.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;7.&lt;/strong&gt; Zones&lt;/p&gt;
&lt;p&gt;The network zones are defined by this file. Zones are an abstraction that help identify different areas of a network. This is a similar to the zones concept used in hardware based firewalls.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The $FW variable refers to Shorewall itself, which may be used to refer to the firewall zone throughout the Shorewall configuration.&lt;/li&gt;
&lt;li&gt;Define a new zone called &quot;modem&quot; which will contain only our ADSL modem.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
root@cronos:/etc/shorewall# cat zones
###########################################################
#ZONE   TYPE    OPTIONS           IN              OUT
#                                 OPTIONS         OPTIONS
fw              firewall
net             ipv4
loc             ipv4
modem           ipv4
#LAST LINE - ADD YOUR ENTRIES ABOVE THIS ONE - DO NOT REMOVE
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;8.&lt;/strong&gt; Interfaces&lt;/p&gt;
&lt;p&gt;This file is used to define the interfaces on the firewall and the zones they belong to.&lt;/p&gt;
&lt;pre&gt;
root@cronos:/etc/shorewall# cat interfaces
###########################################################################
#ZONE   INTERFACE       BROADCAST             OPTIONS
net      ppp0              -      tcpflags,routefilter,nosmurfs,logmartians
modem    eth1            detect
loc      eth0            detect          tcpflags,nosmurfs
#LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;9. &lt;/strong&gt;Masq&lt;/p&gt;
&lt;p&gt;This file is used for masquerading and snat configuration. Masquerading or &lt;em&gt;natting &lt;/em&gt;is used to allow a number of systems in a local network to get access to the internet over a single public IP.&lt;/p&gt;
&lt;p&gt;Change the first column to the name of our external interface and the second column to the name of our internal interface.&lt;/p&gt;
&lt;pre&gt;
root@cronos:/etc/shorewall# cat masq
########################################################################
#INTERFACE   SOURCE     ADDRESS    PROTO      PORT(S) IPSEC   MARK
ppp0          eth0
#LAST LINE -- ADD YOUR ENTRIES ABOVE THIS LINE -- DO NOT REMOVE
&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;With the above files we have described our simple network layout from the perspective of the firewall. Next, we have to define the firewall policy and rules.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10.&lt;/strong&gt; Policy&lt;/p&gt;
&lt;p&gt;The Policy file is used to define our &lt;strong&gt;default&lt;/strong&gt; policy for connections from one zone to another zone. This describes which zones are allowed to establish connections with other zones. Later, we define exceptions to these default policies in the rules file to allow/deny desired traffic.&lt;/p&gt;
&lt;pre&gt;
root@cronos:/etc/shorewall# cat policy
######################################################################
#SOURCE        DEST        POLICY     LOG LEVEL       LIMIT:BURST
# Policies for traffic originating from the local LAN (loc)
#
# If you want to force clients to access the Internet via a proxy server
# on your firewall, change the loc to net policy to REJECT info.
loc                        net                  ACCEPT
loc                       $FW                   REJECT                info
loc                        all                  REJECT                info&lt;/p&gt;
&lt;p&gt;#
# Policies for traffic originating from the firewall ($FW)
#
# If you want open access to the Internet from your firewall, change the
# $FW to net policy to ACCEPT and remove the &#39;info&#39; LOG LEVEL.
# This may be useful if you run a proxy server on the firewall.&lt;/p&gt;
&lt;p&gt;$FW                     net           ACCEPT
$FW                     loc           REJECT              info
$FW                     all           REJECT              info&lt;/p&gt;
&lt;p&gt;#
# Policies for traffic originating from the Internet zone (net)
#
net                     $FW                     DROP      info
net                     loc                     DROP      info
net                     all                     DROP      info&lt;/p&gt;
&lt;p&gt;# THE FOLLOWING POLICY MUST BE LAST
all             all             REJECT          info&lt;/p&gt;
&lt;p&gt;#LAST LINE -- ADD YOUR ENTRIES ABOVE THIS LINE -- DO NOT REMOVE
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;11&lt;/strong&gt;. Rules&lt;/p&gt;
&lt;p&gt;This file defines exceptions to the default policies established in the policy file. This is where you will be adding firewall rules to allow or deny traffic to the services running in your network - Usually accomplished thorough dnat or port forwarding rules.&lt;/p&gt;
&lt;pre&gt;
root@cronos:/etc/shorewall# cat rules
################################################################################################
#ACTION    SOURCE    DEST    PROTO   DEST SOURCE      ORIGINAL    RATE            USER/   MARK
#                                    PORT PORT(S)     DEST        LIMIT           GROUP
#
#       Accept DNS connections from the firewall to the network
#
DNS/ACCEPT    $FW             net
#
#       Accept SSH connections from the local network for administration
#
SSH/ACCEPT      loc             $FW
#
#       Allow Ping from the local network
#
Ping/ACCEPT     loc             $FW&lt;/p&gt;
&lt;p&gt;#
# Reject Ping from the &amp;quot;bad&amp;quot; net zone.. and prevent your log from being flooded..
#&lt;/p&gt;
&lt;p&gt;Ping/REJECT     net             $FW&lt;/p&gt;
&lt;p&gt;ACCEPT          $FW             loc     icmp
ACCEPT          $FW             net     icmp
#&lt;/p&gt;
&lt;p&gt;########################################################
# Custom Lines&lt;/p&gt;
&lt;p&gt;#ACTION         SOURCE    DEST               PROTO     DEST PORT(S)
# &amp;lt;macro&amp;gt;/ACCEPT  $FW       &amp;lt;destination zone&amp;gt;
# ACCEPT          $FW       &amp;lt;destination zone&amp;gt; &amp;lt;protocol&amp;gt; &amp;lt;port&amp;gt;&lt;/p&gt;
&lt;p&gt;## From Local Network ##
Web/ACCEPT      loc       $FW&lt;/p&gt;
&lt;p&gt;VNC/ACCEPT      loc       $FW&lt;/p&gt;
&lt;p&gt;## From Internet ##
# Port Forwarding&lt;/p&gt;
&lt;p&gt;# DNAT          net       loc:[:]
# Web/DNAT      net       loc:10.10.10.2
# FTP/DNAT      net       loc:10.10.10.1&lt;/p&gt;
&lt;p&gt;SSH/ACCEPT      net       $FW&lt;/p&gt;
&lt;p&gt;#LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;12. &lt;/strong&gt;Starting shorewall&lt;/p&gt;
&lt;p&gt;Automatic startup is disabled by default. To enable it just edit the file &lt;em&gt;/etc/default/shorewall&lt;/em&gt; and set the startup variable to 1. Also, set wait_interface=&quot;ppp0&quot;&lt;/p&gt;
&lt;pre&gt;
root@cronos:/etc/shorewall# cat /etc/default/shorewall
# prevent startup with default configuration
# set the following varible to 1 in order to allow Shorewall to start
startup=1
wait_interface=&amp;quot;ppp0&amp;quot;&amp;quot;
&lt;/pre&gt;
&lt;p&gt;The firewall is started using the &lt;em&gt;shorewall start&lt;/em&gt; command and stopped using &lt;em&gt;shorewall stop&lt;/em&gt;.&lt;/p&gt;
&lt;pre&gt;
root@cronos:/# sudo shorewall start
Compiling...
Initializing...
Determining Zones...
 IPv4 Zones: net loc modem
 Firewall Zone: fw
Validating interfaces file...
...
Creating action chain dropInvalid
Creating action chain dropNotSyn
Applying Policies...
Setting up Masquerading/SNAT...
Activating Rules...
done.
&lt;/pre&gt;
&lt;p&gt;The shorewall stop command does not remove all netfilter rules and open the firewall for all traffic to pass. It rather places the firewall in a  safe state defined by the contents of&lt;em&gt; /etc/shorewall/routestopped&lt;/em&gt; file. Use the &lt;em&gt;shorewall clear&lt;/em&gt; command to remove all netfilter rules.&lt;/p&gt;
&lt;p&gt;Note: For pppoe connections, when the PPP interface for the ADSL link goes down, Shorewall needs to be restarted to take the new IP address assignments into account. We will need to restart the firewall by placing /sbin/shorewall restart in the /etc/ppp/ip-up.d directory.&lt;/p&gt;
&lt;pre&gt;
root@cronos:/etc/ppp/ip-up.d# cat shorewall
#!/bin/sh
/sbin/shorewall -f restart
exit 0
&lt;/pre&gt;
&lt;p&gt;This concludes the short introduction to Shorewall. A lot has been introduced above and I haven&#39;t gone thorough the details of each configuration file since most of it is quite self-explanatory. Hopefully, that is enough to get started on Shorewall.&lt;/p&gt;
&lt;p&gt;To truly admire Shorewall&#39;s versatility however, we need to explore more complex setups such as multi-isp, load-balancing , active failover , traffic shaping etc. I hope to bring these topics in future posts.&lt;/p&gt;
&lt;div id=&quot;_mcePaste&quot; class=&quot;mcePaste&quot; style=&quot;position:absolute;left:-10000px;top:83px;width:1px;height:1px;overflow:hidden;&quot;&gt;4. Configuration file skeletons are stored here, however we will be using the files form the two-interfaces example.#:/usr/share/doc/shorewall-common/default-config$ ls
accounting  continue  init        ipsec     masq     netmap  providers    routestopped  started  tcclasses  tos      zones
actions     ecn       initdone    ipsecvpn  modules  params  proxyarp     rules         stop     tcdevices  tunnel
blacklist   hosts     interfaces  maclist   nat      policy  route_rules  start         stopped  tcrules    tunnels5. Except for &quot;shorewall.conf&quot; copy all files from /usr/share/doc/shorewall-common/examples/two-interfaces to /etc/shorewall directory&lt;/p&gt;
&lt;p&gt;#:/usr/share/doc/shorewall-common/examples/two-interfaces$ ls
interfaces  masq  policy  README.txt  routestopped  rules  shorewall.conf  zones&lt;/p&gt;
&lt;p&gt;#:/etc/shorewall$ sudo cp /usr/share/doc/shorewall-common/default-config/zones zones
#:/etc/shorewall$ ls
interfaces  Makefile  masq  policy  routestopped  rules  shorewall.conf  zones&lt;/p&gt;
&lt;p&gt;6. shorewall.conf&lt;/p&gt;
&lt;p&gt;* IP forwarding is neither enabled nor disabled. It is set to &quot;keep&quot;. To enable IP forwarding you have to set to &quot;on&quot; the IP_FORWARDING variable.&lt;/p&gt;
&lt;p&gt;* IPv6 support is enabled by default. To disable it set DISABLE_IPV6 to &quot;yes&quot;.&lt;/p&gt;
&lt;p&gt;* Since our external interface is ppp0 we will want to set CLAMPMSS=yes.&lt;/p&gt;
&lt;p&gt;7. zones&lt;/p&gt;
&lt;p&gt;* This file is used to define the network zones&lt;/p&gt;
&lt;p&gt;* Shorewall recognizes the firewall system as its own zone. The name of the firewall zone is stored in the shell variable $FW which may be used to refer to the firewall zone throughout the Shorewall configuration.&lt;/p&gt;
&lt;p&gt;* Define a new zone called &quot;modem&quot; which will contain only our ADSL modem.&lt;/p&gt;
&lt;p&gt;#:/etc/shorewall$ cat zones&lt;/p&gt;
&lt;p&gt;###############################################################################
#ZONE   TYPE    OPTIONS              IN              OUT
#                                    OPTIONS            OPTIONS
fw      firewall
net     ipv4
loc     ipv4
modem   ipv4&lt;/p&gt;
&lt;p&gt;#LAST LINE - ADD YOUR ENTRIES ABOVE THIS ONE - DO NOT REMOVE&lt;/p&gt;
&lt;p&gt;8. interfaces&lt;/p&gt;
&lt;p&gt;* This file is used to tell the firewall which of your firewall&#39;s network interfaces are connected to which zone.&lt;/p&gt;
&lt;p&gt;#:/etc/shorewall$ cat interfaces&lt;/p&gt;
&lt;p&gt;###############################################################################
#ZONE   INTERFACE       BROADCAST    OPTIONS
net     ppp0               -            tcpflags,routefilter,nosmurfs,logmartians
modem   eth1            detect
loc     eth0            detect          tcpflags,nosmurfs
#LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE&lt;/p&gt;
&lt;p&gt;9. masq&lt;/p&gt;
&lt;p&gt;* Masquerade describes the case where you let your firewall system automatically detect the external interface address.&lt;/p&gt;
&lt;p&gt;* SNAT refers to the case when you explicitly specify the source address that you want outbound packets from your local network to use.&lt;/p&gt;
&lt;p&gt;* In Shorewall, both Masquerading and SNAT are configured with entries in the /etc/shorewall/masq file. You will normally use Masquerading if your external IP is dynamic and SNAT if the IP is static.&lt;/p&gt;
&lt;p&gt;* Edit /etc/shorewall/masq and change the first column to the name of your external interface and the second column to the name of your internal interface.&lt;/p&gt;
&lt;p&gt;#:/etc/shorewall$ cat masq&lt;/p&gt;
&lt;p&gt;###############################################################################
#INTERFACE              SOURCE       ADDRESS         PROTO      PORT(S) IPSEC   MARK
ppp0                    eth0
#LAST LINE -- ADD YOUR ENTRIES ABOVE THIS LINE -- DO NOT REMOVE&lt;/p&gt;
&lt;p&gt;* policy&lt;/p&gt;
&lt;p&gt;* Rules about what traffic to allow and what traffic to deny are expressed in terms of zones.&lt;/p&gt;
&lt;p&gt;* We express our default policy for connections from one zone to another zone in the /etc/shorewall/policy file.&lt;/p&gt;
&lt;p&gt;* We define exceptions to those default policies in the /etc/shorewall/rules file.&lt;/p&gt;
&lt;p&gt;* This file is used to describe the firewall policy regarding establishment of connections. Connection establishment is described in terms of clients who initiate connections and servers who receive those connection requests.&lt;/p&gt;
&lt;p&gt;* Policies defined in /etc/shorewall/policy describe which zones are allowed to establish connections with other zones.&lt;/p&gt;
&lt;p&gt;#:/etc/shorewall$ cat policy&lt;/p&gt;
&lt;p&gt;###############################################################################
#SOURCE         DEST            POLICY          LOG LEVEL       LIMIT:BURST&lt;/p&gt;
&lt;p&gt;#
# Note about policies and logging:
#       This file contains an explicit policy for every combination of
#       zones defined in this sample.  This is solely for the purpose of
#       providing more specific messages in the logs.  This is not
#       necessary for correct operation of the firewall, but greatly
#       assists in diagnosing problems. The policies below are logically
#       equivalent to:
#
#       loc     net             ACCEPT
#       net     all             DROP    info
#       all     all             REJECT          info
#
#       The Shorewall-perl compiler will generate the individual policies
#       below from the above general policies if you set
#       EXPAND_POLICIES=Yes in shorewall.conf.
#&lt;/p&gt;
&lt;p&gt;# Policies for traffic originating from the local LAN (loc)
#
# If you want to force clients to access the Internet via a proxy server
# on your firewall, change the loc to net policy to REJECT info.
loc             net             ACCEPT
loc             $FW             REJECT          info
loc             all             REJECT          info&lt;/p&gt;
&lt;p&gt;#
# Policies for traffic originating from the firewall ($FW)
#
# If you want open access to the Internet from your firewall, change the
# $FW to net policy to ACCEPT and remove the &#39;info&#39; LOG LEVEL.
# This may be useful if you run a proxy server on the firewall.&lt;/p&gt;
&lt;p&gt;# $FW           net             REJECT          info&lt;/p&gt;
&lt;p&gt;$FW             net             ACCEPT
$FW             loc             REJECT          info
$FW             all             REJECT          info&lt;/p&gt;
&lt;p&gt;#
# Policies for traffic originating from the Internet zone (net)
#
net             $FW             DROP    info
net             loc             DROP    info
net             all             DROP    info&lt;/p&gt;
&lt;p&gt;# THE FOLLOWING POLICY MUST BE LAST
all             all             REJECT          info&lt;/p&gt;
&lt;p&gt;#LAST LINE -- ADD YOUR ENTRIES ABOVE THIS LINE -- DO NOT REMOVE&lt;/p&gt;
&lt;p&gt;9. rules&lt;/p&gt;
&lt;p&gt;* The /etc/shorewall/rules file defines exceptions to the policies established in the /etc/shorewall/policy file.&lt;/p&gt;
&lt;p&gt;* There is one entry in /etc/shorewall/rules for each of these rules. Entries in this file only govern the establishment of new connections — packets that are part of an existing connection or that establish a connection that is related to an existing connection are automatically accepted.&lt;/p&gt;
&lt;p&gt;* Rules : http://www.shorewall.net/3.0/Documentation.htm#Rules&lt;/p&gt;
&lt;p&gt;#:/etc/shorewall$ cat rules&lt;/p&gt;
&lt;p&gt;#############################################################################################################
#ACTION         SOURCE          DEST    PROTO   DEST SOURCE             ORIGINAL        RATE            USER/   MARK
#                                               PORT PORT(S)            DEST            LIMIT           GROUP
#
#       Accept DNS connections from the firewall to the network
#&lt;/p&gt;
&lt;p&gt;# DNS/ACCEPT    $FW             net
#
#       Accept SSH connections from the local network for administration
#
SSH/ACCEPT      loc             $FW
#
#       Allow Ping from the local network
#
Ping/ACCEPT     loc             $FW&lt;/p&gt;
&lt;p&gt;#
# Reject Ping from the &quot;bad&quot; net zone.. and prevent your log from being flooded..
#&lt;/p&gt;
&lt;p&gt;Ping/REJECT     net             $FW&lt;/p&gt;
&lt;p&gt;ACCEPT          $FW             loc     icmp
ACCEPT          $FW             net     icmp
#&lt;/p&gt;
&lt;p&gt;########################################################
# Custom Lines&lt;/p&gt;
&lt;p&gt;#ACTION         SOURCE    DEST               PROTO     DEST PORT(S)
# &amp;lt;macro&amp;gt;/ACCEPT  $FW       &amp;lt;destination zone&amp;gt;
# ACCEPT          $FW       &amp;lt;destination zone&amp;gt; &amp;lt;protocol&amp;gt; &amp;lt;port&amp;gt;&lt;/p&gt;
&lt;p&gt;## From Local Network ##
# Accept DNS requests from local nw&lt;/p&gt;
&lt;p&gt;DNS/ACCEPT      loc       $FW&lt;/p&gt;
&lt;p&gt;Web/ACCEPT      loc       $FW&lt;/p&gt;
&lt;p&gt;VNC/ACCEPT      loc       $FW&lt;/p&gt;
&lt;p&gt;## From Internet ##
# Port Forwarding&lt;/p&gt;
&lt;p&gt;# DNAT          net       loc:[:]
# Web/DNAT      net       loc:10.10.10.2
# FTP/DNAT      net       loc:10.10.10.1
SSH/ACCEPT      net       $FW&lt;/p&gt;
&lt;p&gt;#LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE&lt;/p&gt;
&lt;p&gt;10. Port Forwarding (DNAT)&lt;/p&gt;
&lt;p&gt;* Port forwarding configuration is done using DNAT rules in the /etc/shorewall/rules file.&lt;/p&gt;
&lt;p&gt;The general form of a simple port forwarding rule in /etc/shorewall/rules is:&lt;/p&gt;
&lt;p&gt;#ACTION   SOURCE    DEST                                          PROTO      DEST PORT(S)
DNAT      net       loc:[:]&lt;/p&gt;
&lt;p&gt;* Shorewall has macros for many popular applications. Look at /usr/share/shorewall/macro.* to see what is available.&lt;/p&gt;
&lt;p&gt;* Macros simplify creating DNAT rules by supplying the protocol and port(s) as shown in the following examples.&lt;/p&gt;
&lt;p&gt;#:/usr/share/shorewall$ ls
action.Drop       macro.BitTorrent  macro.HTTPS         macro.Jetdirect  macro.PostgreSQL  macro.SPAMD       macro.Web
action.Reject     macro.CVS         macro.ICQ           macro.L2TP       macro.Printer     macro.SSH         macro.Webmin
actions.std       macro.Distcc      macro.IMAP          macro.LDAP       macro.Rdate       macro.Submission  macro.Whois
action.template   macro.DNS         macro.IMAPS         macro.LDAPS      macro.RDP         macro.SVN         Makefile-lite
configpath        macro.Drop        macro.IPIP          macro.MySQL      macro.Reject      macro.Syslog      modules
firewall          macro.DropDNSrep  macro.IPP           macro.NNTP       macro.Rsync       macro.Telnet      rfc1918
lib.base          macro.DropUPnP    macro.IPPserver     macro.NNTPS      macro.SixXS       macro.Telnets     strip
lib.cli           macro.Edonkey     macro.IPsec         macro.NTP        macro.SMB         macro.template    version
lib.config        macro.Finger      macro.IPsecah       macro.NTPbrd     macro.SMBBI       macro.TFTP        wait4ifup
lib.dynamiczones  macro.FTP         macro.IPsecnat      macro.PCA        macro.SMBswat     macro.Time
macro.AllowICMPs  macro.Gnutella    macro.Jabberd       macro.Ping       macro.SMTP        macro.Trcrt
macro.Amanda      macro.GRE         macro.JabberPlain   macro.POP3       macro.SMTPS       macro.VNC
macro.Auth        macro.HTTP        macro.JabberSecure  macro.POP3S      macro.SNMP        macro.VNCL&lt;/p&gt;
&lt;p&gt;* Example :&lt;/p&gt;
&lt;p&gt;#ACTION         SOURCE    DEST             PROTO     DEST PORT(S)
Web/DNAT        net       loc:10.10.10.2&lt;/p&gt;
&lt;p&gt;VNC/ACCEPT      loc       $FW&lt;/p&gt;
&lt;p&gt;* Starting shorewall&lt;/p&gt;
&lt;p&gt;* In order to avoid the startup of the firewall on an unconfigured machine, automatic startup, on boot, is disabled by default. To enable it just edit the file /etc/default/shorewall and set the startup variable to 1.&lt;/p&gt;
&lt;p&gt;* Also, set wait_interface=&quot;ppp0&quot;&lt;/p&gt;
&lt;p&gt;#:/etc/shorewall$ cat /etc/default/shorewall
# prevent startup with default configuration
# set the following varible to 1 in order to allow Shorewall to start&lt;/p&gt;
&lt;p&gt;startup=1&lt;/p&gt;
&lt;p&gt;# if your Shorewall configuration requires detection of the ip address of a ppp
# interface, you must list such interfaces in &quot;wait_interface&quot; to get Shorewall to
# wait until the interface is configured. Otherwise the script will fail because
# it won&#39;t be able to detect the IP address.
#
# Example:
#    wait_interface=&quot;ppp0&quot;
# or
#    wait_interface=&quot;ppp0 ppp1&quot;
# or, if you have defined  in /etc/shorewall/params
#    wait_interface=&lt;/p&gt;
&lt;p&gt;wait_interface=&quot;ppp0&quot;&lt;/p&gt;
&lt;p&gt;#
# Startup options
#&lt;/p&gt;
&lt;p&gt;OPTIONS=&quot;&quot;&lt;/p&gt;
&lt;p&gt;# EOF
#:/etc/shorewall$&lt;/p&gt;
&lt;p&gt;* The firewall is started using the shorewall start command and stopped using shorewall stop.&lt;/p&gt;
&lt;p&gt;#:/$ sudo shorewall start
Compiling...
Initializing...
Determining Zones...
IPv4 Zones: net loc modem
Firewall Zone: fw
Validating interfaces file...
Validating hosts file...
Pre-processing Actions...
Pre-processing /usr/share/shorewall/action.Drop...
Pre-processing /usr/share/shorewall/action.Reject...
Validating Policy file...
Determining Hosts in Zones...
net Zone: ppp0:0.0.0.0/0
loc Zone: eth0:0.0.0.0/0
modem Zone: eth1:0.0.0.0/0
Deleting user chains...
Compiling /etc/shorewall/routestopped ...
Creating Interface Chains...
Compiling Common Rules
Adding Anti-smurf Rules
Compiling TCP Flags checking...
Compiling Kernel Route Filtering...
Compiling Martian Logging...
Compiling IP Forwarding...
Compiling /etc/shorewall/rules...
Compiling Actions...
Compiling /usr/share/shorewall/action.Drop for Chain Drop...
Compiling /usr/share/shorewall/action.Reject for Chain Reject...
Compiling /etc/shorewall/policy...
Compiling Masquerading/SNAT
Compiling Traffic Control Rules...
Compiling Rule Activation...
Shorewall configuration compiled to /var/lib/shorewall/.start
Starting Shorewall....
Initializing...
Clearing Traffic Control/QOS
Deleting user chains...
Enabling Loopback and DNS Lookups
Creating Interface Chains...
Setting up SMURF control...
Setting up Black List...
Adding Anti-smurf Jumps...
Setting up TCP Flags checking...
Setting up ARP filtering...
Setting up Route Filtering...
Setting up Martian Logging...
Setting up Accept Source Routing...
IP Forwarding Enabled
Setting up SYN Flood Protection...
Setting up Rules...
Setting up Actions...
Creating action chain Drop
Creating action chain Reject
Creating action chain dropBcast
Creating action chain dropInvalid
Creating action chain dropNotSyn
Applying Policies...
Setting up Masquerading/SNAT...
Activating Rules...
done.
#:/$&lt;/p&gt;
&lt;p&gt;* When the firewall is stopped, routing is enabled on those hosts that have an entry in /etc/shorewall/routestopped.&lt;/p&gt;
&lt;p&gt;#:/etc/shorewall$ cat routestopped
#
# Shorewall version 4.0 - Sample Routestopped File for two-interface configuration.
# Copyright (C) 2006 by the Shorewall Team
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# See the file README.txt for further details.
#------------------------------------------------------------------------------
# For information about entries in this file, type &quot;man shorewall-routestopped&quot;
#
# The manpage is also online at
# http://shorewall.net/manpages/shorewall-routestopped.html
#
# See
# http://shorewall.net/starting_and_stopping_shorewall.htm for additional
# information.
#
##############################################################################
#INTERFACE      HOST(S)                  OPTIONS
eth0            -
#LAST LINE -- ADD YOUR ENTRIES BEFORE THIS ONE -- DO NOT REMOVE&lt;/p&gt;
&lt;p&gt;* The shorewall stop command does not remove all netfilter rules and open your firewall for all traffic to pass. It rather places the firewall in a safe state defined by the contents of /etc/shorewall/routestopped file and the setting of ADMINISABSENTMINDED in /etc/shorewall/shorewall.conf&lt;/p&gt;
&lt;p&gt;* If you want to remove all Netfilter rules and open your firewall for all traffic to pass, use the shorewall clear command.&lt;/p&gt;
&lt;p&gt;* If you change your configuration and want to install the changes, use the shorewall restart command.&lt;/p&gt;
&lt;p&gt;[edit] For pppoe&lt;/p&gt;
&lt;p&gt;When the PPP interface for the ADSL link goes down, Shorewall needs to be restarted to take the new IP address assignments into account.&lt;/p&gt;
&lt;p&gt;We will need to restart the firewall by placing /sbin/shorewall restart in the /etc/ppp/ip-up.d directory.&lt;/p&gt;
&lt;p&gt;root@ubuntu:/etc/ppp/ip-up.d# cat shorewall
#!/bin/sh&lt;/p&gt;
&lt;p&gt;/sbin/shorewall -f restart&lt;/p&gt;
&lt;p&gt;exit 0
root@ubuntu:/etc/ppp/ip-up.d#&lt;/p&gt;
&lt;/div&gt;
</content>
 </entry>
 

</feed>
